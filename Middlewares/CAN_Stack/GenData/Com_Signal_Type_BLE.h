/**
 * @note   : DO NOT MODIFY!!! AUTOMATICALLY GENERATED BY dbc2c.py(V1.1.1)
 * @file   : Com_Signal_Type_BLE.h
 * @brief  : Define com signals type
 * @author : yangtl
 * @date   : 2025-06-06 16:31:20
 */
/**
 *  DBCFile: CANdb_ComExample.dbc
 *  DBName : BodyCAN
 *  Node   : BLE
 */
#ifndef __COM_SIGNAL_TYPE_BLE_H__
#define __COM_SIGNAL_TYPE_BLE_H__

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

#pragma pack(push)
#pragma pack(1)

/* Tx0: 0x100, BLE_Status, Transmitter: BLE */
// 联合体的核心作用：“字节流” 与 “信号字段” 的无缝转换
typedef union {
    uint8_t frame[64];
    struct { /* Byte Order: Intel */
        uint64_t BLE_ConnectStatus : 1;         /*!< The current connection status of the BLE module */
        uint64_t reserved0 : 7;
        uint64_t BLE_RSSI : 8;
        uint64_t BLE_AdvertisingInterval : 8;
        uint64_t BLE_ScanInterval : 8;
        uint64_t reserved1 : 64;
        uint64_t reserved2 : 64;
        uint64_t reserved3 : 64;
        uint64_t reserved4 : 64;
        uint64_t reserved5 : 64;
        uint64_t reserved6 : 64;
        uint64_t reserved7 : 64;
        uint64_t reserved8 : 32;
    } signal;
} BLE_Status_0x100_Type;

/* Tx1: 0x101, BLE_Control, Transmitter: BLE */
typedef union {
    uint8_t frame[12];
    struct { /* Byte Order: Intel */
        uint64_t BLE_CarDoorControl : 1;
        uint64_t BLE_CarWindowControl : 1;
        uint64_t reserved0 : 64;
        uint64_t reserved1 : 30;
    } signal;
} BLE_Control_0x101_Type;

/* Rx0: 0x200, VCU_VehicleStatus, Transmitter: VCU */
typedef union {
    uint8_t frame[8];
    struct { /* Byte Order: Intel */
        uint64_t VCU_VehicleGearStatus : 4;
        uint64_t VCU_VehicleGearValid : 1;
        uint64_t VCU_VehicleSpeedValid : 1;
        uint64_t reserved0 : 2;
        uint64_t VCU_VehicleSpeed : 16;
        uint64_t reserved1 : 40;
    } signal;
} VCU_VehicleStatus_0x200_Type;


/* Tx and Rx messages of BLE, numbers: 3 */

/* Tx messages of BLE, numbers: 2 */
typedef struct {
    BLE_Status_0x100_Type         BLE_Status_0x100;
    BLE_Control_0x101_Type        BLE_Control_0x101;
} BLE_TxMsgsType;

/* Rx messages of BLE, numbers: 1 */
typedef struct {
    VCU_VehicleStatus_0x200_Type  VCU_VehicleStatus_0x200;
} BLE_RxMsgsType;

#pragma pack(pop)

#ifdef __cplusplus
}
#endif

#endif /* __COM_SIGNAL_TYPE_BLE_H__ */
